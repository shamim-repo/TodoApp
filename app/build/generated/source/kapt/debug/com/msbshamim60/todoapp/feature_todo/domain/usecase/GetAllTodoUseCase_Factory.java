// Generated by Dagger (https://dagger.dev).
package com.msbshamim60.todoapp.feature_todo.domain.usecase;

import com.msbshamim60.todoapp.feature_todo.domain.repo.TodoRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GetAllTodoUseCase_Factory implements Factory<GetAllTodoUseCase> {
  private final Provider<TodoRepository> repoProvider;

  public GetAllTodoUseCase_Factory(Provider<TodoRepository> repoProvider) {
    this.repoProvider = repoProvider;
  }

  @Override
  public GetAllTodoUseCase get() {
    return newInstance(repoProvider.get());
  }

  public static GetAllTodoUseCase_Factory create(Provider<TodoRepository> repoProvider) {
    return new GetAllTodoUseCase_Factory(repoProvider);
  }

  public static GetAllTodoUseCase newInstance(TodoRepository repo) {
    return new GetAllTodoUseCase(repo);
  }
}
