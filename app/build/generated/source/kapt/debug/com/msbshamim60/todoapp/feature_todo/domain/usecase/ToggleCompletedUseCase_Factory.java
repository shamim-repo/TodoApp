// Generated by Dagger (https://dagger.dev).
package com.msbshamim60.todoapp.feature_todo.domain.usecase;

import com.msbshamim60.todoapp.feature_todo.domain.repo.TodoRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ToggleCompletedUseCase_Factory implements Factory<ToggleCompletedUseCase> {
  private final Provider<TodoRepository> repoProvider;

  public ToggleCompletedUseCase_Factory(Provider<TodoRepository> repoProvider) {
    this.repoProvider = repoProvider;
  }

  @Override
  public ToggleCompletedUseCase get() {
    return newInstance(repoProvider.get());
  }

  public static ToggleCompletedUseCase_Factory create(Provider<TodoRepository> repoProvider) {
    return new ToggleCompletedUseCase_Factory(repoProvider);
  }

  public static ToggleCompletedUseCase newInstance(TodoRepository repo) {
    return new ToggleCompletedUseCase(repo);
  }
}
