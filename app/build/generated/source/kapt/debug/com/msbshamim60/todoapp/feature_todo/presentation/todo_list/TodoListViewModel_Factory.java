// Generated by Dagger (https://dagger.dev).
package com.msbshamim60.todoapp.feature_todo.presentation.todo_list;

import com.msbshamim60.todoapp.feature_todo.domain.usecase.AddTodoUseCase;
import com.msbshamim60.todoapp.feature_todo.domain.usecase.DeleteTodoUseCase;
import com.msbshamim60.todoapp.feature_todo.domain.usecase.GetAllTodoUseCase;
import com.msbshamim60.todoapp.feature_todo.domain.usecase.ToggleArchivedUseCase;
import com.msbshamim60.todoapp.feature_todo.domain.usecase.ToggleCompletedUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class TodoListViewModel_Factory implements Factory<TodoListViewModel> {
  private final Provider<AddTodoUseCase> addTodoUseCaseProvider;

  private final Provider<DeleteTodoUseCase> deleteTodoUseCaseProvider;

  private final Provider<ToggleArchivedUseCase> toggleArchivedUseCaseProvider;

  private final Provider<ToggleCompletedUseCase> toggleCompletedUseCaseProvider;

  private final Provider<GetAllTodoUseCase> getAllTodoUseCaseProvider;

  public TodoListViewModel_Factory(Provider<AddTodoUseCase> addTodoUseCaseProvider,
      Provider<DeleteTodoUseCase> deleteTodoUseCaseProvider,
      Provider<ToggleArchivedUseCase> toggleArchivedUseCaseProvider,
      Provider<ToggleCompletedUseCase> toggleCompletedUseCaseProvider,
      Provider<GetAllTodoUseCase> getAllTodoUseCaseProvider) {
    this.addTodoUseCaseProvider = addTodoUseCaseProvider;
    this.deleteTodoUseCaseProvider = deleteTodoUseCaseProvider;
    this.toggleArchivedUseCaseProvider = toggleArchivedUseCaseProvider;
    this.toggleCompletedUseCaseProvider = toggleCompletedUseCaseProvider;
    this.getAllTodoUseCaseProvider = getAllTodoUseCaseProvider;
  }

  @Override
  public TodoListViewModel get() {
    return newInstance(addTodoUseCaseProvider.get(), deleteTodoUseCaseProvider.get(), toggleArchivedUseCaseProvider.get(), toggleCompletedUseCaseProvider.get(), getAllTodoUseCaseProvider.get());
  }

  public static TodoListViewModel_Factory create(Provider<AddTodoUseCase> addTodoUseCaseProvider,
      Provider<DeleteTodoUseCase> deleteTodoUseCaseProvider,
      Provider<ToggleArchivedUseCase> toggleArchivedUseCaseProvider,
      Provider<ToggleCompletedUseCase> toggleCompletedUseCaseProvider,
      Provider<GetAllTodoUseCase> getAllTodoUseCaseProvider) {
    return new TodoListViewModel_Factory(addTodoUseCaseProvider, deleteTodoUseCaseProvider, toggleArchivedUseCaseProvider, toggleCompletedUseCaseProvider, getAllTodoUseCaseProvider);
  }

  public static TodoListViewModel newInstance(AddTodoUseCase addTodoUseCase,
      DeleteTodoUseCase deleteTodoUseCase, ToggleArchivedUseCase toggleArchivedUseCase,
      ToggleCompletedUseCase toggleCompletedUseCase, GetAllTodoUseCase getAllTodoUseCase) {
    return new TodoListViewModel(addTodoUseCase, deleteTodoUseCase, toggleArchivedUseCase, toggleCompletedUseCase, getAllTodoUseCase);
  }
}
